// const ary = [1, 4, 2, 8, 345, 123, 43, 32, 5643, 63, 123, 43, 2, 55, 1, 234, 92]
// const ary2 = [1, 4, 2, 8, 345, 123, 43, 32, 5643, 63, 123, 43, 2, 55, 1, 234, 92]
//   .map(each => ({ num: each }) )
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function sort2(array, sortValue = (item) => item, reverse = false) {
    const condition = (item, pivot) => reverse
        ? sortValue(item) > sortValue(pivot)
        : sortValue(item) < sortValue(pivot);
    if (!array[0])
        return array;
    const [pivot, ...rest] = array;
    const [left, right] = rest
        .reduce((sorted, item) => {
        condition(item, pivot)
            ? sorted[0].push(item)
            : sorted[1].push(item);
        return sorted;
    }, [[], []]);
    return [
        ...sort2(left, sortValue, reverse),
        pivot,
        ...sort2(right, sortValue, reverse)
    ];
}
// const x = sort2(ary2, val => val.num, true)
// x
export default sort2;
